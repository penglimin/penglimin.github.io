---
layout: post
title: JSON
date: 2014-03-8 15:32:24.000000000 +09:00
---


# JSON
![](http://json.org/img/json160.gif)

>## 什么是JSON？
`JSON`(JavaScript Object Notation)，是一种轻量级的`数据交换格式`。非常容易进行阅读和编写。同时也`方便了机器进行解析和生成`。
JSON采用完全独立于程序语言的文本格式，但是也使用了类C语言的习惯(包括C, C++, C#, Java, JavaScript, Perl, Python, and many others)。这些特性使JSON成为理想的数据交换语言。
>


## JSON官网
* [官网](http://json.org/)
* [在线解析器](http://json.cn/)
* [在线解析器](http://www.bejson.com/)


*JSON是建立在两个结构之上 :*

 *  一个 `键/值对`的集合。在不同的编程语言中，这是作为 对象，记录、结构、字典、哈希表、列表、或关联数组来实现的。
 *  一个有序的`values`列表。在大多数语言中，这是作为一个数组、向量、列表或序列来实现的。
 
 (下面这句话可以不必理解：)
 这些都是通用的数据结构。几乎所有的现代编程语言都以一种或另一种形式支持它们。它是有意义的一种数据格式，是与编程语言可以互换的基础。
 
 
 
## *talk is cheap,show me the code*


	//成功返回
	{
	    "statuses": [
	        {
	            "created_at": "Tue May 31 17:46:55 +0800 2011",
	            "id": 11488058246,
	            "text": "求关注。"，
	            "source": "<a href="http://weibo.com" rel="nofollow">新浪微博</a>",
	            "favorited": false,
	            "truncated": false,
	            "in_reply_to_status_id": "",
	            "in_reply_to_user_id": "",
	            "in_reply_to_screen_name": "",
	            "geo": null,
	            "mid": "5612814510546515491",
	            "reposts_count": 8,
	            "comments_count": 9,
	            "annotations": [],
	            "user": {
	                "id": 1404376560,
	                "screen_name": "zaku",
	                "name": "zaku",
	                "province": "11",
	                "city": "5",
	                "location": "北京 朝阳区",
	                "description": "人生五十年，乃如梦如幻；有生斯有死，壮士复何憾。",
	                "url": "http://blog.sina.com.cn/zaku",
	                "profile_image_url": "http://tp1.sinaimg.cn/1404376560/50/0/1",
	                "domain": "zaku",
	                "gender": "m",
	                "followers_count": 1204,
	                "friends_count": 447,
	                "statuses_count": 2908,
	                "favourites_count": 0,
	                "created_at": "Fri Aug 28 00:00:00 +0800 2009",
	                "following": false,
	                "allow_all_act_msg": false,
	                "remark": "",
	                "geo_enabled": true,
	                "verified": false,
	                "allow_all_comment": true,
	                "avatar_large": "http://tp1.sinaimg.cn/1404376560/180/0/1",
	                "verified_reason": "",
	                "follow_me": false,
	                "online_status": 0,
	                "bi_followers_count": 215
	            }
	        },
	        ..
	    ],
	    "previous_cursor": 0,
	    "next_cursor": 11488013766,
	    "total_number": 50
	}

	//失败返回
	{
	    "request": "/statuses/public_timeline/biz.json",
	    "error_code": XXXXX,
	    "error": "error message."
	}
	
	
*上述是微博开放平台中，找到了其中一个接口返回的数据 （数据格式json） [获取最新的公共微博。](http://open.weibo.com/wiki/C/2/statuses/public_timeline/biz)*

开放平台很多，列举简单的几个，如下列表：

  * [新浪微博开放平台](http://open.weibo.com)
  * [腾讯开放平台众创空间](http://open.qq.com)
  * [微信开放平台](https://open.weixin.qq.com)
  
 言归正传，让我们仔细观察上面复杂的json串，我们可以看到许许多多 { }，"aaa":"bbb", [ ], 等等，这些又是什么呢？ 其实这都是我们上述介绍过的`两种结构`
 
  > 这两种结构就是对象和数组两种 结构,通过这两种结构可以表示各种复杂的结构。

### 1.对象(Object)（第一种结构）
对象在 js 中表示为“{}”括起来的内容,数据结构为 {key:value,key:value,...}的键 值对的结构,在面向对象的语言中,key 为对象的属性,value 为对应的属性值,所以 很容易理解,取值方法为 对象.key 获取属性值,这个属性值的类型可以是 数字、 字符串、数组、对象几种。


![object轨道图](http://json.org/object.gif)



上述涉及到一个关键概念我们暂且叫做： `轨道图`

 轨道图其实就像我们的交通图：
我们想象，开着车去一个地方，我们有多少线路就有多少走法，我们可以在合适的路口，选择去不同的方向，我只需要转弯处遵守相应的规则，除此之外，我们就不用忌惮什么了，如果你比较闲，甚至可以在某个环路上，转圈圈，只需要将我们所说的轨道图，想象成开车就可以。
下面我们看看上述轨道图的表示的各种可能性。


        第一种：{}		第二种：{"ballplayer": "麦迪"}
		当然你可以说有很多种，确实（根据你自己的喜好，和需求，可以在上述图的环形路中随便转圈）
		第三种：
		{
		    "ballplayer": "麦迪",
		    "ballplayer2": "科比",
		    "ballplayer3": "邓肯",
		    "ballplayer4": "库里"
		    ...........
		    
		}

### 2.数组(Array)（第二种结构）

数组在js中是中括号“[]”括起来的内容,数据结构为 ["java","javascript","vb",...], 取值方式和所有语言中一样,使用索引获取,字段值的类型可以是 数字、字符串、 数组、对象几种。
![array轨道图](http://json.org/array.gif)

上述轨道图的表示的各种可能性:
    
       
        第一种：[]		第二种：["Monday"]
		当然你可以说有很多种，确实（根据你自己的喜好，和需求，可以在上述图的环形路中随便转圈）
		第三种：
		[
		    "Tuesday",
		    "Wednesday",
		    "Thursday"
		    ..........
		]



#### 数据类型 

##### value(值)
值(value) 可以是双引号括起来的字符串(string)、数值(number)、true、false、 null、对象(object)或者数组(array)。这些结构可以嵌套。![value](http://json.org/value.gif)

##### string(字符串)
字符串(string) 是由双引号包围的任意数量 Unicode 字符的集合,使用反斜线 转义。一个字符(character)即一个单独的字符串(character string)。
![string](http://json.org/string.gif)
##### number(数据)
数值(number) 也与 C 或者 Java 的数值非常相似。只是 JSON 的数值没有使用 八进制与十六进制格式。
![number](http://json.org/number.gif)

### 到此为止Json基本语法规则就这些了，我们通过这两种结构进行各种嵌套，表示各种复杂的结构。以满足我们的需求，对于初学者来说，嵌套层次越深，越容易迷惑，下面准备了一些练习，你可以做一做。想一想。
##### 练习：
   
    1.请分析，并练习
 	 {
	    "animals": {
	        "dog": [
	            {
	            	"name": "wangcai",
	                "age": 15
	            },
	            {
	                "name": "Marty",
	                "age": null
	            }
	        ]
	    }
	 }
	 2.有这样一个需求，客户端需要一个马刺队的现役球员名单，每个球员需要写出年龄和姓名，
	 及身高信息，数据传输格式选择 Json。 请手写，Json串，并通过在线解析器检验合法性。

     3. 分析上述例子中的json串信息，或者浏览新浪微博开放平台，找到开放接口，并选择
     一个接口，进行接口分析。
    
   * [在线解析器](http://www.bejson.com/)
   
   * [新浪微博开放平台](http://open.weibo.com)
  
  
  
### 最后附上一张截图，待续，谢谢。
![](https://penglimin.github.io/assets/LeonpengPicture/json.png)



	 
  