#### 1.4存储器

CPU是计算机的核心部件，它控制整个计算机的运行并进行计算。要想让一个CPU工作，就必须向它提供指令和数据。指令和数据在存储器中存放，也就是我们平时所说的内存。在一台PC机中内存的作用仅次于CPU。离开了内存，性能再好的CPU也无法工作。这就像再聪明的大脑，没有了记忆也无法进行思考。磁盘不同于内存，磁盘上数据或程序如果不读到内存中，就无法被CPU使用。要灵活地利用汇编语言编程，我们首先要了解CPU是如何从内存中读取信息，以及向内存中写入信息的。



#### 1.5 指令和数据

指令和数据是应用上的概念。在内存或磁盘上，指令和数据没有任何区别，都是二进制信息。CPU在工作的时候把有的信息看作指令，有的信息看作数据，为同样的信息赋予了不同的意义。

例如： 内存中的二进制信息 1000100111011000，计算机可以把它看作大小为89D8H的数据来处理，也可以将其看作指令 mov ax, bx来执行。

1000100111011000  ----> 89D8H (数据)

1000100111011000  ----> mov ax, bx (程序)



#### 1.6 存储单元

存储器被划分为若干个存储单元，每个存储单元从0开始顺序编号，例如一个存储器有128个存储单元，编号从0-127

那么一个存储单元能存储多少信息呢？

我们知道电子计算机的最小信息单位是bit  比特。也就是一个二进制位。 8个bit组成一个byte ，也就是一个字节。 微型机存储器的存储单元可以存储一个Byte,即 8个二进制位。

一个存储器有128个存储单元，他可以存储128个Byte。

微机存储器的容量是以字节为最小单位来计算的。对于拥有128个存储单元的存储器，我们可以说，他的容量是128个字节。



对于大容量存储器一般还用一下单位来计量容量。

1KB       1MB    1GB   1TB

硬盘的容量单位同内存一样，实际上以上单位是微机中常用的计量单位。



####  1.7 CPU对存储器的读写

从上降到，存储器被划分成多个存储单元，存储单元从0开始顺序编号。这些编号可以看做存储单元在存储器中的地址。就像一条街，每个房子都有门牌号码。



CPU 要从内存中读数据，首先要指定存储单元的地址。也就是说它要先确定它要读取哪一个存储单元中的数据。就像一条街上找人，先要确定他住在哪个房子里。



另外，在一台微机中，不只有存储器这一种器件。CPU在读写数据时还要指明，它要对哪一个器件进行操作，进行哪种操作，是从中读出数据，还是向里面写入数据。



可见，CPU要想进行数据的读写，必须和外部器件（标准说法是芯片）进行下面3类信息的交互。



1.存储单元的地址（地址信息）

2.器件的选择，读或写的命令（控制信息）

3.读或写的数据（数据信息）



那么CPU是通过什么将地址，数据和控制信息传到存储芯片中的呢？电子计算能处理，传输的信息都是电信号，电信号当然要用导线传送。在计算机中专门有链接CPU和其他芯片的导线，通常称为总线。总线从物理上来讲，就是一根根导线的集合。

根据传送信息的不同，总线从逻辑上又分为3类。

地址总线。控制总线和数据总线。

CPU从3号单元中读取数据的过程。

1.cpu通过地址线将地址信息3发出

2.cpu通过控制线发出内存读命令，选中存储器芯片，并通知它，将要从中读取数据。

3.存储器将3号单元中的数据8通过数据总线送入cpu



写操作与读操作相似。

从上面我们知道了cpu 是如何进行数据读写的。可是如何命令计算机进行数据的读写呢？

要让一个计算机或微处理器工作，应向它输入能够驱动它进行工作的电平信息（机器码）。

对于8086cpu,下面的机器码，能够完成从3号单元读数据。

机器码：101000010000001100000000

含义：从3号单元读取数据送入寄存器AX

CPU接收这条机器码后将完成我们上面所述的读写工作。

机器码难以记忆，用汇编指令来表示，情况如下。

机器码：

101000010000001100000000

对应的汇编指令：MOV AX, [3]

含义：传送3号单元的内容入AX





#### 1.8 地址总线

现在我们知道，cpu是通过地址总线来指定存储单元的，可见地址总线上能传送多少个不同的信息，cpu就可以对多少个存储单元进行寻址。

现假设，一个cpu有10根地址总线，让我们来看一下他的寻址情况，我们知道，在电子计算机中，一根导线可以传送稳定状态只有两种，高电平或是低电平。用二进制表示就是1或0，10根导线可以传送10位二进制数据。而10位二进制数组可以表示多少个不同的数据呢？ 2的10次方，最小数为0 ，最大数为1023。

一个cpu有N根地址线，则可以说这个cpu的地址总线的宽度为N.这样的cpu最多可以寻找2的N次方个内存单元。



#### 1.9 数据总线

cpu与内存或其他器件之间的数据传输是通过数据总线来进行的，数据总线的宽度决定了cpu和外界的数据传输速度。8根数据总线一次可以传送一个8位二进制数据，即一个字节。 16根数据总线一次可以传送两个字节。



8088cpu的数据总线宽度为8 ， 8086cpu的数据总线宽度为16. 我们来分别看一下他们向内存中写入数据89D8H时，是如何通过数据总线传送数据的。



8086有16根数据线，可以一次传送16位数据。所以一次传送数据89D8H；而8088只有8根数据线，一次只能传8位数据，所以向内存写入数据89D8H时需要进行两次数据传递。



#### 1.10控制总线

cpu 对外部器件的控制是通过控制总线来进行的，在这里控制总线是个总称，控制总线是一些不同控制线的集合。有多根控制总线，就意味着cpu提供了对外部器件的多少种控制，所以，控制总线的宽度决定了cpu对外部器件的控制能力。



前面所讲的内存读或者写命令是由几根控制线综合发出的，其中一根成为，读信号输出的控制总线负责由cpu向外传送读信号，cpu向该控制线上输出低电平表示将要读取数据；有一根称为写信号输出  的控制线则负责 传送写信号。











